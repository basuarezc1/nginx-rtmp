# ===================================================================
# Configuración de Nginx con módulo RTMP para contenedor Docker
# ===================================================================

# Configuración global de worker processes
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Configuración de eventos
events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

# ===================================================================
# CONFIGURACIÓN RTMP
# ===================================================================
rtmp {
    server {
        listen 1935;
        chunk_size 4096;
        allow publish all;
        allow play all;

        # Aplicación principal para recibir streams de cámaras
        application live {
            live on;
            
            # Permitir publicación desde cualquier IP (ajustar según necesidades de seguridad)
            allow publish all;
            allow play all;
            
            # Configuración de grabación (opcional)
            record off;
            
            # Generar notificaciones de conexión/desconexión
            on_publish http://localhost:8080/on_publish;
            on_play http://localhost:8080/on_play;
            on_done http://localhost:8080/on_done;
            
            # Reenvío automático del stream a microservicio de procesamiento
            # Nota: Cambiar "procesador" por la IP/hostname real del microservicio
            push rtmp://https://backendinspiria-production.up.railway.app/video/ws/in-stream:1935/live/procesado;
            
            # Configuración HLS para reproducción web
            hls on;
            hls_path /tmp/hls;
            hls_fragment 3s;
            hls_playlist_length 60s;
            hls_continuous on;
            hls_cleanup on;
            hls_nested on;
            
            # Configuración DASH (opcional, para mayor compatibilidad)
            dash on;
            dash_path /tmp/dash;
            dash_fragment 3s;
            dash_playlist_length 60s;
            dash_cleanup on;
            dash_nested on;
            
            # Configuración de transcodificación (opcional)
            # Descomenta y ajusta según tus necesidades de calidad/ancho de banda
            # exec ffmpeg -i rtmp://localhost/live/$name 
            #   -c:v libx264 -c:a aac -b:v 800k -b:a 128k -vf "scale=1280:720" -f flv rtmp://localhost/live720p/$name
            #   -c:v libx264 -c:a aac -b:v 400k -b:a 64k -vf "scale=854:480" -f flv rtmp://localhost/live480p/$name;
        }
        
        # Aplicación para streams transcodificados (si se usa transcodificación)
        application live720p {
            live on;
            allow publish 127.0.0.1;
            allow play all;
            
            hls on;
            hls_path /tmp/hls720p;
            hls_fragment 3s;
            hls_playlist_length 60s;
            hls_continuous on;
            hls_cleanup on;
            hls_nested on;
        }
        
        application live480p {
            live on;
            allow publish 127.0.0.1;
            allow play all;
            
            hls on;
            hls_path /tmp/hls480p;
            hls_fragment 3s;
            hls_playlist_length 60s;
            hls_continuous on;
            hls_cleanup on;
            hls_nested on;
        }
    }
}

# ===================================================================
# CONFIGURACIÓN HTTP
# ===================================================================
http {
    # Configuración básica HTTP
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Configuración de logs
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                   '$status $body_bytes_sent "$http_referer" '
                   '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx/access.log main;
    
    # Optimizaciones de rendimiento
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100M;
    
    # Configuración de compresión
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css application/json application/javascript 
               text/xml application/xml application/xml+rss text/javascript 
               application/vnd.apple.mpegurl;
    
    # Servidor HTTP principal
    server {
        listen 8080;
        server_name localhost;
        
        # Configuración de CORS para permitir acceso desde navegadores
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
        add_header Access-Control-Allow-Headers 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
        add_header Access-Control-Expose-Headers 'Content-Length,Content-Range';
        
        # Página de estadísticas RTMP
        location /stat {
            rtmp_stat all;
            rtmp_stat_stylesheet stat.xsl;
            add_header Access-Control-Allow-Origin *;
        }
        
        location /stat.xsl {
            root /usr/share/nginx/html;
        }
        
        # Servir archivos HLS
        location /hls {
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            root /tmp;
            
            # Configuración de caché para HLS
            add_header Cache-Control no-cache;
            add_header Access-Control-Allow-Origin *;
            
            # Configuración específica para archivos .m3u8
            location ~ \.m3u8$ {
                add_header Cache-Control no-cache;
                add_header Access-Control-Allow-Origin *;
            }
            
            # Configuración específica para segmentos .ts
            location ~ \.ts$ {
                add_header Cache-Control max-age=10;
                add_header Access-Control-Allow-Origin *;
            }
        }
        
        # Servir archivos DASH (opcional)
        location /dash {
            types {
                application/dash+xml mpd;
                video/mp4 mp4;
            }
            root /tmp;
            add_header Cache-Control no-cache;
            add_header Access-Control-Allow-Origin *;
        }
        
        # Endpoints para notificaciones RTMP
        location /on_publish {
            return 201;
        }
        
        location /on_play {
            return 201;
        }
        
        location /on_done {
            return 201;
        }
        
        # Página de índice con reproductor de ejemplo
        location / {
            root /usr/share/nginx/html;
            index index.html;
        }
        
        # Endpoint de salud para Docker health checks
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Configuración de error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}

# ===================================================================
# NOTAS DE CONFIGURACIÓN:
# ===================================================================
# 
# 1. ENTRADA DE VIDEO:
#    - Las cámaras IP deben enviar a: rtmp://tu-servidor:1935/live/nombre-stream
#    - Ejemplo: rtmp://localhost:1935/live/camara1
#
# 2. REENVÍO AUTOMÁTICO:
#    - Cambiar "procesador" en la línea "push" por la IP/hostname real
#    - El microservicio recibirá en: rtmp://procesador:1935/live/procesado
#
# 3. REPRODUCCIÓN WEB HLS:
#    - Acceder a: http://tu-servidor:8080/hls/nombre-stream.m3u8
#    - Ejemplo: http://localhost:8080/hls/camara1.m3u8
#
# 4. ESTADÍSTICAS:
#    - Ver estadísticas en: http://tu-servidor:8080/stat
#
# 5. DOCKER COMPOSE EXAMPLE:
#    services:
#      nginx-rtmp:
#        image: tiangolo/nginx-rtmp
#        ports:
#          - "1935:1935"
#          - "8080:8080"
#        volumes:
#          - ./nginx.conf:/etc/nginx/nginx.conf
#          - nginx_logs:/var/log/nginx
#
# 6. SEGURIDAD:
#    - Ajustar "allow publish" y "allow play" según necesidades
#    - Considerar autenticación para producción
#    - Configurar firewall apropiadamente
#